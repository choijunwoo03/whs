package com.example.pentestingplayground.controller;

import jakarta.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Map;

@Controller
public class BoardController {

    @Autowired
    JdbcTemplate jdbcTemplate;

    // 게시글 목록 (로그인 필요)
    @GetMapping("/board")
    public String boardList(Model model, HttpSession session) {
        if (session.getAttribute("loginId") == null) {
            return "redirect:/login";
        }

        List<Map<String, Object>> list = jdbcTemplate.queryForList("SELECT * FROM board");
        model.addAttribute("posts", list);
        return "board";
    }

    // 글쓰기 폼 (로그인 필요)
    @GetMapping("/board/write")
    public String writeForm(HttpSession session) {
        if (session.getAttribute("loginId") == null) {
            return "redirect:/login";
        }

        return "board_write";
    }

    // 글 작성 처리 (로그인 필요)
    @PostMapping("/board/write")
    public String writePost(@RequestParam String title, @RequestParam String content, HttpSession session) {
        if (session.getAttribute("loginId") == null) {
            return "redirect:/login";
        }

        String sql = "INSERT INTO board (title, content) VALUES (?, ?)";
        jdbcTemplate.update(sql, title, content);
        return "redirect:/board";
    }

    // 글 보기 (로그인필요)
    @GetMapping("/board/view")
    public String viewPost(@RequestParam int id, Model model, HttpSession session) {
        if (session.getAttribute("loginId") == null) {
            return "redirect:/login";
        }

        String sql = "SELECT * FROM board WHERE id = ?";
        Map<String, Object> post = jdbcTemplate.queryForMap(sql, id);
        model.addAttribute("post", post);
        return "board_view";
    }


    // 글 삭제 (로그인 필요)
    @GetMapping("/board/delete")
    public String deletePost(@RequestParam int id, HttpSession session) {
        if (session.getAttribute("loginId") == null) {
            return "redirect:/login";
        }

        jdbcTemplate.update("DELETE FROM board WHERE id = ?", id);
        return "redirect:/board";
    }
}
